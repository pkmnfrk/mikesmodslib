buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = getVersionString()
group = "com.mike-caron.mikesmodslib" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "MikesModsLib"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${forgeversion}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "stable_39"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

repositories {
    maven {
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://tehnut.info/maven"
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "McModDev"
        url = "https://maven.mcmoddev.com"
    }
    repositories {
        maven {
            name = "CurseForge"
            url = "https://minecraft.curseforge.com/api/maven/"
        }
    }
}

dependencies {
    deobfProvided "mcp.mobius.waila:Hwyla:${hwyla_version}"
    deobfCompile ("mcjty.theoneprobe:TheOneProbe-1.12:${top_version}"){
        transitive = false
    }
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_${mcversion}:${jei_version}:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_${mcversion}:${jei_version}"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task buildDeobf(type: Jar, dependsOn: 'jar') {
    from "build/classes/main"
    from "build/resources/main"
    classifier "dev"
}
artifacts {
    archives buildDeobf
}

def getVersionString()
{
    def ret = mod_version

    if (!System.env.TRAVIS_TAG && System.env.TRAVIS_BUILD_NUMBER)
    {
        ret += "-" + System.env.TRAVIS_BUILD_NUMBER
    }

    return ret;
}